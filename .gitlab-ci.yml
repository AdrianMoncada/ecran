default:
  image: node:16.16.0


stages:
    - build
    - deploy

build_back:
    stage: build
    image:  maven:latest
    script:
        - cd backend
        - cd api-movie
        - ls
        - mvn clean install
        - ls
        - cd target
        - ls
    rules:
      - if: $CI_COMMIT_REF_NAME == "develop"
        changes:
         - backend/*
    artifacts:
        expire_in: 1 week
        paths:
            - backend/api-movie/target/api-movie-0.0.1-SNAPSHOT.jar

deploy_back:
    stage: deploy
    image: alpine:3.11
    rules:
        - if: $CI_COMMIT_REF_NAME == "develop"
    before_script:
        - apk update && apk add openssh-client bash
        - mkdir -p ~/.ssh
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
        - touch ~/.ssh/config
        - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
        - ssh-keyscan -H $DEPLOY_SERVER_IP >> ~/.ssh/known_hosts
    script:
        - echo "Deploying started!"
        - ssh ubuntu@$DEPLOY_SERVER_IP "sudo systemctl stop consoleapp.service"
        - ls
        - cd backend
        - cd api-movie
        - cd target
        - ls
        - scp  api-movie-0.0.1-SNAPSHOT.jar ubuntu@$DEPLOY_SERVER_IP:~/console-app/
        - ssh ubuntu@$DEPLOY_SERVER_IP "sudo systemctl start consoleapp.service"
        - echo "Finished deploying the app."

.deploy_preview:
  stage: deploy Frontend
  except:
    - develop
  script:
    - npm install --global vercel
    - vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
    - vercel build --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt  --token=$VERCEL_TOKEN

deploy_front:
  stage: deploy
  script:
    - npm install --global vercel
    - cd frontend
    - ls
    - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
    - vercel build --prod --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop"
      changes:
          - frontend/*
